input = """3,225,1,225,6,6,1100,1,238,225,104,0,1101,40,71,224,1001,224,-111,224,4,224,1002,223,8,223,101,7,224,224,1,224,223,223,1102,66,6,225,1102,22,54,225,1,65,35,224,1001,224,-86,224,4,224,102,8,223,223,101,6,224,224,1,224,223,223,1102,20,80,225,101,92,148,224,101,-162,224,224,4,224,1002,223,8,223,101,5,224,224,1,224,223,223,1102,63,60,225,1101,32,48,225,2,173,95,224,1001,224,-448,224,4,224,102,8,223,223,1001,224,4,224,1,224,223,223,1001,91,16,224,101,-79,224,224,4,224,1002,223,8,223,101,3,224,224,1,224,223,223,1101,13,29,225,1101,71,70,225,1002,39,56,224,1001,224,-1232,224,4,224,102,8,223,223,101,4,224,224,1,223,224,223,1101,14,59,225,102,38,143,224,1001,224,-494,224,4,224,102,8,223,223,101,3,224,224,1,224,223,223,1102,30,28,224,1001,224,-840,224,4,224,1002,223,8,223,101,4,224,224,1,223,224,223,4,223,99,0,0,0,677,0,0,0,0,0,0,0,0,0,0,0,1105,0,99999,1105,227,247,1105,1,99999,1005,227,99999,1005,0,256,1105,1,99999,1106,227,99999,1106,0,265,1105,1,99999,1006,0,99999,1006,227,274,1105,1,99999,1105,1,280,1105,1,99999,1,225,225,225,1101,294,0,0,105,1,0,1105,1,99999,1106,0,300,1105,1,99999,1,225,225,225,1101,314,0,0,106,0,0,1105,1,99999,107,677,226,224,1002,223,2,223,1005,224,329,1001,223,1,223,8,226,226,224,102,2,223,223,1006,224,344,101,1,223,223,7,226,677,224,1002,223,2,223,1005,224,359,101,1,223,223,1007,677,226,224,1002,223,2,223,1005,224,374,1001,223,1,223,1007,677,677,224,1002,223,2,223,1006,224,389,101,1,223,223,1008,226,226,224,1002,223,2,223,1005,224,404,1001,223,1,223,108,677,226,224,1002,223,2,223,1006,224,419,1001,223,1,223,1108,677,226,224,102,2,223,223,1006,224,434,1001,223,1,223,108,226,226,224,1002,223,2,223,1005,224,449,101,1,223,223,7,677,677,224,1002,223,2,223,1006,224,464,1001,223,1,223,8,226,677,224,1002,223,2,223,1005,224,479,1001,223,1,223,107,226,226,224,102,2,223,223,1006,224,494,101,1,223,223,1007,226,226,224,1002,223,2,223,1005,224,509,1001,223,1,223,1107,226,677,224,102,2,223,223,1005,224,524,1001,223,1,223,108,677,677,224,1002,223,2,223,1005,224,539,101,1,223,223,1107,677,226,224,102,2,223,223,1005,224,554,1001,223,1,223,107,677,677,224,1002,223,2,223,1005,224,569,101,1,223,223,8,677,226,224,102,2,223,223,1005,224,584,1001,223,1,223,7,677,226,224,102,2,223,223,1006,224,599,101,1,223,223,1008,677,677,224,1002,223,2,223,1005,224,614,101,1,223,223,1008,677,226,224,102,2,223,223,1006,224,629,1001,223,1,223,1108,677,677,224,102,2,223,223,1006,224,644,101,1,223,223,1108,226,677,224,1002,223,2,223,1005,224,659,1001,223,1,223,1107,226,226,224,102,2,223,223,1006,224,674,1001,223,1,223,4,223,99,226"""

def inputSplit(input):
    return input.split(',')

def do():
    splitInput = inputSplit(input)
    intInput = convertToInt(splitInput)

    intInput[225] = 5

    position = 2

    while True:
        modes = actionSplit(intInput[position])
        action = modes['action']
        if action == 9:
            return intInput
        
        if action == 3:
            print('3 detected')
            position += 2
            continue
        
        arg1 = getArg(intInput, modes, position, 1)
        
        if action == 4:
            print(arg1)
            position += 2
            continue      
        
        arg2 = getArg(intInput, modes, position, 2)
        
        resultPos = intInput[position + 3]

        if action == 1:
            result = arg1 + arg2
            intInput[resultPos] = result
            position += 4
        elif action == 2:
            result = arg1 * arg2
            intInput[resultPos] = result
            position += 4
        elif action == 5:
            if arg1 != 0:
                position = arg2
            else:
                position += 3
        elif action == 6:
            if arg1 == 0:
                position = arg2
            else:
                position += 3
        elif action == 7:
            if arg1 < arg2:
                intInput[resultPos] = 1
            else:
                intInput[resultPos] = 0
            position += 4
        elif action == 8:
            if arg1 == arg2:
                intInput[resultPos] = 1
            else:
                intInput[resultPos] = 0
            position += 4
        else:
            print(action)
            print("Failure")
            return

        

def getArg(intInput, modes, position, number):
    if modes[number] == 0:
        arg = intInput[intInput[position + number]]
    else:
        arg = intInput[position + number]
    return arg        
        

def convertToInt(input):
    numbers = []
    for stringNumber in input:
        numbers.append(int(stringNumber))

    return numbers

def splitNumber(number):
    numbers = []
    for digit in str(number):
        numbers.append(int(digit))
    return numbers

def actionSplit(number):
    modes = {}
    modes[1] = 0
    modes[2] = 0

    split = splitNumber(number)
    modes['action'] = split[-1]
    split.reverse()
    for i in range(2, len(split)):
        modes[i-1] = split[i]
    
    return modes
 

do()